#!/bin/sh

# sauron - external video player script for ytfzf

# if script is run without arguments exit
[ $# -gt 0 ] || exit

# input set to args passed to script
input=$(printf "%s\n" "$@")

# mpd and taskspooler
audio() {
    printf "%s\n" "${input}" | \
    while read line
    do
      tsp pinch -i "${line}" 1>/dev/null 
    done
}

download() {
    printf "%s\n" "${input}" | \
    while read line
    do
      tsp -L "${line}" \
      youtube-dl -f 'bestvideo[height<=?1080][fps<=?30][vcodec!=?vp9]+bestaudio/best' \
      --restrict-filenames \
      --no-playlist \
      --external-downloader aria2c \
      --external-downloader-args '-c -j 3 -x 3 -s 3 -k 1M' \
       -o "~/Downloads/%(title)s.%(ext)s" \
      "${line}" 1>/dev/null
    done
}

# mpv fullscreen on second display and taskspooler
fullscreen() {
    printf "%s\n" "${input}" | \
    while read line
    do
      tsp mpv --fs --screen=1 "${line}" 1>/dev/null 
    done
}

# mpv and taskspooler
video() {
    printf "%s\n" "${input}" | \
    while read line
    do
      tsp mpv --no-terminal "${line}" 1>/dev/null
    done
}

# fzf prompt variables spaces to line up menu options
audio_tsp='audio      - mpd play audio'
download_tsp='download   - youtube-dl download links'
fullscreen_tsp='fullscreen - mpv play fullscreen on second display'
video_tsp='video      - mpv play video on current display'

# fzf prompt to specify function to run on links from ytfzf
menu=$(printf "%s\n" \
	      "${audio_tsp}" \
	      "${download_tsp}" \
	      "${fullscreen_tsp}" \
	      "${video_tsp}" \
	      | fzf --delimiter='\n' --prompt='Pipe links to: ' --info=inline --layout=reverse --no-multi)

# case statement to run function based on fzf prompt output
case "${menu}" in
   audio*) audio;;
   download*) download;;
   fullscreen*) fullscreen;;
   video*) video;;
   *) exit;;
esac
