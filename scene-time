#!/bin/sh

#===============================================================================
# scene time - create ffmpeg cutlist
#===============================================================================


#===============================================================================
# script usage
#===============================================================================

usage () {
# if argument passed to function echo it
[ -z "${1}" ] || echo "! ${1}"
# display help
echo "\
$(basename "$0") -i input -o output

-i input
-o output"
exit 2
}


#===============================================================================
# error messages
#===============================================================================

INVALID_OPT_ERR='Invalid option:'
REQ_ARG_ERR='requires an argument'
WRONG_ARGS_ERR='wrong number of arguments passed to script'
NOT_MEDIA_FILE_ERR='is not a media file'
NOTFILE_ERR='not a file'

#===============================================================================
# check number of aruments passed to script
#===============================================================================

[ $# -gt 0 ] || usage "${WRONG_ARGS_ERR}"


#===============================================================================
# getopts check options passed to script
#===============================================================================

while getopts ':i:o:h' opt
do
  case ${opt} in
     i) input="${OPTARG}"
	[ -f "${input}" ] || usage "${input} ${NOTFILE_ERR}";;
     h) usage;;
     o) output="${OPTARG}";;
     \?) usage "${INVALID_OPT_ERR} ${OPTARG}" 1>&2;;
     :) usage "${INVALID_OPT_ERR} ${OPTARG} ${REQ_ARG_ERR}" 1>&2;;
  esac
done
shift $((OPTIND-1))


#===============================================================================
# variables
#===============================================================================

# get the input file name
input_nopath="${input##*/}"
input_name="${input_nopath%.*}"

# output file name
output_default="${input_name}-cutlist-$(date +"%Y-%m-%d-%H-%M-%S").txt"


#===============================================================================
# awk subtract 2nd line from first line - print start and duration
#===============================================================================

# awk 'NR > 1 {printf("%s%s%s\n"), prev, ",", $0-prev}; {prev = $0}' < "${input}" > "${output:=${output_default}}"

#===============================================================================
# seconds
#===============================================================================

# convert to seconds
#awk -F: 'NF==3 { print ($1 * 3600) + ($2 * 60) + $3 } NF==2 { print ($1 * 60) + $2 } NF==1 { print 0 + $1 }' < "${input}"

#seconds=$(awk -F: 'NF==3 { print ($1 * 3600) + ($2 * 60) + $3 } NF==2 { print ($1 * 60) + $2 } NF==1 { print 0 + $1 }' < "${input}")
#echo "${seconds}" | awk 'NR > 1 {printf("%s%s%s\n"), prev, ",", $0-prev}; {prev = $0}' > "${output:=${output_default}}"
